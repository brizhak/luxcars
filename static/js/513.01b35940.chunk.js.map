{"version":3,"file":"static/js/513.01b35940.chunk.js","mappings":"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","sources":["components/Register/Register.styled.js","components/Register/Register.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MainContainer = styled.div`\n  height: calc(95vh - 65px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media screen and (min-width: 428px) {\n    height: calc(95vh - 75px);\n  }\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 80px);\n  }\n  @media screen and (min-width: 1158px) {\n    height: calc(100vh - 75px);\n  }\n`\n\nexport const FormContainer = styled.div`\n  width: 300px;\n  @media screen and (min-width: 768px){\n    width: 400px;\n  }\n  @media screen and (min-width: 1158px) {\n    width: 494px;\n  }\n`\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    gap: 28px;\n  }\n  @media screen and (min-width: 1158px) {\n    gap: 32px;\n  }\n`\n\nexport const RegisterInput = styled.input`\n  width: 100%;\n  height: 50px;\n  border-radius: 40px;\n  @media screen and (min-width: 768px) {\n    height: 57px;\n  }\n  @media screen and (min-width: 1158px) {\n    height: 64px;\n  }\n`\n\nexport const RegisterButton = styled.button`\n  font-size: 16px;\n  text-decoration: none;\n  color: var(--second-text-color);\n  padding: 6px 15px;\n  height: 50px;\n  border-color: transparent;\n  border-radius: 40px;\n  background-color: var(--accent-color);\n  transition: all 0.3s;\n  &:hover {\n    background-color: var(--darker-accent-color);\n  }\n  @media screen and (min-width: 768px) {\n    height: 57px;\n    font-size: 18px;\n  }\n  @media screen and (min-width: 1158px) {\n    height: 64px;\n    font-size: 20px;\n  }\n`\n\nexport const LoginText = styled.p`\n  text-align: center;\n  font-size: 14px;\n  @media screen and (min-width: 1158px) {\n    font-size: 16px;\n  }\n`\n\nexport const LoginLink = styled(Link)`\n  transition: all 0.3s;\n  &:hover {\n    color: var(--accent-color);\n  }\n`","import React from 'react';\nimport { MainContainer, FormContainer, RegisterForm, RegisterInput, RegisterButton, LoginText, LoginLink } from './Register.styled';\nimport { Formik } from 'formik';\nimport styled from 'styled-components';\n\nconst Register = () => {\n  return (\n    <MainContainer>\n      <FormContainer>\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validate={values => {\n            const errors = {};\n            if (!values.name) {\n              errors.name = 'Please enter name';\n            } else if (!values.email) {\n              errors.email = 'Please enter email';\n            } else if (!values.password) {\n              errors.password = 'Please enter password';\n            } else if (\n              !/^[\\w-.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/i.test(values.email)\n            ) {\n              errors.email = 'Invalid email address';\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <RegisterForm onSubmit={handleSubmit}>\n              <RegisterInput\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n              />\n              {errors.name && touched.name && <ErrorMessage>{errors.name}</ErrorMessage>}\n              <RegisterInput\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n              <RegisterInput\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {errors.password && touched.password && <ErrorMessage>{errors.password}</ErrorMessage>}\n              <RegisterButton type=\"submit\" disabled={isSubmitting}>\n                Sign up\n              </RegisterButton>\n              <LoginText>If you already have an account, please <LoginLink to={'/login'}>sign in</LoginLink></LoginText>\n            </RegisterForm>\n          )}\n        </Formik>\n      </FormContainer>\n    </MainContainer>\n  );\n};\n\nconst ErrorMessage = styled.div`\n  color: red; \n  margin-top: 5px;\n  font-size: 14px; \n`;\n\nexport default Register;\n\n","import React from 'react'\nimport SectionTemplate from 'components/SectionTemplate'\nimport Register from 'components/Register'\n\nconst RegisterPage = () => {\n  return (\n    <SectionTemplate>\n      <Register/>\n    </SectionTemplate>\n  )\n}\n\nexport default RegisterPage\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","FormContainer","_templateObject2","RegisterForm","_templateObject3","RegisterInput","_templateObject4","RegisterButton","_templateObject5","LoginText","_templateObject6","LoginLink","Link","_templateObject7","ErrorMessage","_jsx","children","Formik","initialValues","name","email","password","validate","values","errors","test","onSubmit","_ref","setSubmitting","setTimeout","alert","JSON","stringify","_ref2","touched","handleChange","handleBlur","handleSubmit","isSubmitting","_jsxs","type","placeholder","onChange","onBlur","value","disabled","to","SectionTemplate","Register"],"sourceRoot":""}